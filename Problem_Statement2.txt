Ansible Assignment-2

Install nginx in your servers(more then 2) and make sure the log files of nginx should not be granted more than 1 GB space on the nodes
Create equal number of websites as per your team  members and every members website should be hosted for only 2 hours and after every 2 hours another website should start displaying.
    - First 2 hours <team>.opstree.com should display content of tanya website
    - Next 2 hours <team>.opstree.com should display content of Heena website

Install Apache
Also Configure nginx to run as reverse proxy to apache after completing first point individually.


- Run the ansible commands in such a way that workers nodes are updated one by one and not altogether and also make sure using all type of strategies.

# Step No. 1:
ansible web -i hosts -b -m apt -a “name=nginx state=present update_cache=yes”

# Step No. 2:
Create directory for website
ansible web -i hosts -b -m file -a “path=/var/www/website state=directory”
ansible web -i hosts -b -m command -a “mkdir /var/www/website/site1 /var/www/website/site2 /var/www/website/site3”

# Step No 3:
Create website inside each directory
ansible web -i hosts -b -m shell -a “echo ‘This is Kshamata's website’ > /var/www/website/site1/index.html”
ansible web -i hosts -b -m shell -a “echo ‘This is Anugra website’ > /var/www/website/site2/index.html”
ansible web -i hosts -b -m shell -a “echo ‘This is Pratham website’ > /var/www/website/site3/index.html”
ansible web -i hosts -b -m command -a “ln -s /var/www/website/site1 /var/www/html”
ansible web -i hosts -b -m command -a “ln -s /var/www/website/site2 /var/www/html”
ansible web -i hosts -b -m command -a “ln -s /var/www/website/site3 /var/www/html”

# Step 04:
Create website’s configuration
ansible web -i hosts -b -m template -a “src=nginx_kshamata.conf.j2 dest=/etc/nginx/sites-available/kshamata”
ansible web -i hosts -b -m template -a “src=nginx_anugra.conf.j2 dest=/etc/nginx/sites-available/anugra”
ansible web -i hosts -b -m template -a “src=nginx_pratham.conf.j2 dest=/etc/nginx/sites-available/pratham”

# Step 05:
Create symlink to sites-enabled
ansible web -i hosts -b -m command -a “ln -s /etc/nginx/sites-available/kshamata /etc/nginx/sites-enabled”
ansible web -i hosts -b -m command -a “ln -s /etc/nginx/sites-available/anugra /etc/nginx/sites-enabled”
ansible web -i hosts -b -m command -a “ln -s /etc/nginx/sites-available/pratham /etc/nginx/sites-enabled”

# Step 06:
Copy my script to remote server and give execute permission to it.
This “rotate_website.sh” script will rotate the website content every 2 min.
ansible web -i hosts -b -m copy -a “src=/home/ubuntu/ansible/rotate_website.sh dest=/home/ubuntu”
ansible web -i hosts -b -m command -a “chmod +x /home/ubuntu/rotate_website.sh”

# Step 07:
Setup the cron to run the rotate_website.sh script content
ansible web -i hosts -b -m cron -a “name=run_script minute=‘*/2’ job=‘/bin/bash /home/ubuntu/rotate_website.sh’”

# Step 08:
Restart Nginx Service
ansible web -i hosts -b -m service -a “name=nginx state=restarted”
=========================================================================================================

ansible hosts -b -m apt -a "name=apache2 state=present"

ansible hosts -b -m template -a "src=apache_site.conf.j2 dest=/etc/apache2/sites-available/000-default.conf"

ansible hosts -b -m template -a "src=apache_site.conf.j2 dest=/etc/apache2/sites-available/000-default.conf"

ansible hosts -b -m systemd -a "name=nginx state=reloaded"
ansible hosts -b -m systemd -a "name=apache2 state=reloaded"
